{"ast":null,"code":"var _jsxFileName = \"/Users/tracyking/Desktop/food-app-take-2/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-tems'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes['button--alt'],\n    onClick: props.onClose,\n    children: \"Close\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 24\n  }, this);\n\n  {\n    hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), !isCheckout && modalCheckout, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Cart, \"h+sIjGF0PwOLirwEDh4q+RICsX0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/tracyking/Desktop/food-app-take-2/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","classes","CartItem","CartContext","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","cartItems","map","name","price","bind","modalActions","onClose","button","total","modalCheckout","actions"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMU,OAAO,GAAGX,UAAU,CAACK,WAAD,CAA1B;AAEA,QAAMO,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAGC,EAAE,IAAI;AAClCP,IAAAA,OAAO,CAACQ,UAAR,CAAmBD,EAAnB;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAGC,IAAI,IAAI;AACjCV,IAAAA,OAAO,CAACW,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,MAAM,EAAE;AAAlB,KAAhB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMe,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEtB,OAAO,CAAC,WAAD,CAAtB;AAAA,cACGQ,OAAO,CAACI,KAAR,CAAcW,GAAd,CAAmBL,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACM,IAFb;AAGE,MAAA,KAAK,EAAEN,IAAI,CAACO,KAHd;AAIE,MAAA,QAAQ,EAAEX,qBAAqB,CAACY,IAAtB,CAA2B,IAA3B,EAAiCR,IAAI,CAACH,EAAtC,CAJZ;AAKE,MAAA,KAAK,EAAEE,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BR,IAA9B;AALT,OACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,QAAMY,YAAY,gBAAG;AAAQ,IAAA,SAAS,EAAE3B,OAAO,CAAC,aAAD,CAA1B;AAA2C,IAAA,OAAO,EAAEK,KAAK,CAACuB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AACA;AAACjB,IAAAA,QAAQ,iBAAI;AAAQ,MAAA,SAAS,EAAEX,OAAO,CAAC6B,MAA3B;AAAmC,MAAA,OAAO,EAAER,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AAAqF;AAAA;AAEtF,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEhB,KAAK,CAACuB,OAAtB;AAAA,eACGN,SADH,eAEE;AAAK,MAAA,SAAS,EAAEtB,OAAO,CAAC8B,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOrB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGH,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YANjB,EAOG,CAACA,UAAD,IAAeyB,aAPlB,eAQE;AAAK,MAAA,SAAS,EAAE/B,OAAO,CAACgC;AAAxB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD,CAlDD;;GAAM5B,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\n\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({...item, amount: 1});\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const cartItems = (\n    <ul className={classes['cart-tems']}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\n  {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>};\n\n  return (\n      <Modal onClose={props.onClose}>\n        {cartItems}\n        <div className={classes.total}>\n          <span>Total Amount</span>\n          <span>{totalAmount}</span>\n        </div>\n        {isCheckout && <Checkout />}\n        {!isCheckout && modalCheckout}\n        <div className={classes.actions}>\n\n        </div>\n     </Modal>\n  )\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}